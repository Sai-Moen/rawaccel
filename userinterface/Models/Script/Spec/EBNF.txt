(* RawAccelScript EBNF (with creative liberties) *)

alphabetic = "A" | "B" | "C" | "D" | "E" | "F" | "G"
		   | "H" | "I" | "J" | "K" | "L" | "M" | "N"
		   | "O" | "P" | "Q" | "R" | "S" | "T" | "U"
		   | "V" | "W" | "X" | "Y" | "Z" | "a" | "b"
		   | "c" | "d" | "e" | "f" | "g" | "h" | "i"
		   | "j" | "k" | "l" | "m" | "n" | "o" | "p"
		   | "q" | "r" | "s" | "t" | "u" | "v" | "w"
		   | "x" | "y" | "z" ;

digit = "0" | "1" | "2" | "3" | "4" | "5" | "6" | "7" | "8" | "9" ;

identifier = alphabetic , { alphabetic | (digit | ".") } ; (* Limited to 15 characters *)
number = { digit } , [ "." , { digit } ] ; (* Limited to 31 characters *)

keyword = "x" | "y" | "e" | "pi" | "tau" ;

precedence0 = "+" | "-" ;
precedence1 = "*" | "/" | "%" ;
precedence2 = "^" ;

inline	   = "+=" | "-=" | "*=" | "/=" | "%=" | "^=" ;

comparison = "&" | "|" | "!"
		   | "==" | "<" | ">" | "<=" | ">=" ;

function = "abs" | "sqrt" | "cbrt"
		 | "round" | "trunc" | "ceil" | "floor"
		 | "log" | "log2" | "log10"
		 | "sin" | "sinh" | "asin" | "asinh"
		 | "cos" | "cosh" | "acos" | "acosh"
		 | "tan" | "tanh" | "atan" | "atanh" ;

(* Entry point *)
script = "[" , parameters , "]" , variables , "{" , calculation , "}" ;

(* extern parameter *)
parameters = { parameter , "=" , number } ; (* Bound to RawAccel *)

(* extern variable *)
variables = { variable , "=" , number } ; (* Temporary, unbound *)

identifier = parameter | variable ;
slot = identifier | keyword ;

calculation = { statement } ;

statement = variable , "=" , expression0 , ";"
		  | variable , inline , expression0 , ";"
		  | "if" , "(" , condition , ")" , ":" , { statement } , ":"
		  | "while" , "(" , condition , ")" , ":" , { statement } , ":" ;

condition = expression0 , comparison , expression0 ;

expression0 = [ precendence0 ] , expression1 , [ { precendence0 , expression1 } ] ;

expression1 = expression2 , [ { precedence1 , expression2 } ] ;

expression2 = slot , [ { precedence2 , slot } ]
	  | [ function ] , "(" , expression0 , ")" ;